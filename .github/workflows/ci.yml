name: CI

on:
  push:
    branches: ["master"]
    tags: ["v*"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1

jobs:

  ##########################
  # Linting and formatting #
  ##########################

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - run: cargo clippy --workspace --all-features -- -D warnings

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt

      - run: cargo +nightly fmt --all -- --check


  ###########
  # Testing #
  ###########

  msrv:
    name: MSRV
    strategy:
      fail-fast: false
      matrix:
        msrv: ["1.71.0"]
        os:
          - ubuntu
          - macOS
          - windows
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.msrv }}

      - name: Install minimal dependencies versions
        run: cargo +nightly update -Z minimal-versions

      - run: cargo test --all-features

  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - macOS
          - windows
        toolchain:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
            path: ~/.cargo/registry
            key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
            path: ~/.cargo/git
            key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo binaries
        uses: actions/cache@v3
        with:
            path: ~/.cargo/bin
            key: ${{ runner.os }}-cargo-bin-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: llvm-tools
      - run: cargo build --all-features
      - name: Run tests
        run: cargo test --all-features
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Cinstrument-coverage'
          RUSTDOCFLAGS: "-Cinstrument-coverage"
          LLVM_PROFILE_FILE: 'defaultmap-%p-%m.profraw'
      - name: Install grcov
        run: if [[ ! -e ~/.cargo/bin/grcov ]]; then cargo install grcov; fi
      - name: Run grcov
        run: grcov . --binary-path target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../**' --ignore '/*' -o coverage.lcov
      - name: Codecov
        # You may pin to the exact commit or the version.
        # uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
        uses: codecov/codecov-action@v3
        with:
          # Repository upload token - get it from codecov.io. Required only for private repositories
          # token: # optional
          # Specify whether the Codecov output should be verbose
          verbose: true
          fail_ci_if_error: true


  #################
  # Documentation #
  #################

  rustdoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly

      - run: cargo +nightly doc --all-features
        env:
          RUSTDOCFLAGS: --cfg docsrs --cfg ci



  #############
  # Releasing #
  #############

  release-github:
    name: release (GitHub)
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs:
      - clippy
      - msrv
      - rustdoc
      - rustfmt
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Parse release version
        id: release
        run: echo "version=${GITHUB_REF#refs/tags/v}"
             >> $GITHUB_OUTPUT
      - name: Verify release version matches `derive_more` Cargo manifest
        run: |
          test "${{ steps.release.outputs.version }}" \
            == "$(grep -m1 'version = "' Cargo.toml | cut -d '"' -f2)"

      - name: Parse CHANGELOG link
        id: changelog
        run: echo "link=${{ github.server_url }}/${{ github.repository }}/blob/v${{ steps.release.outputs.version }}/CHANGELOG.md#$(sed -n '/^## ${{ steps.release.outputs.version }}/{s/^## \([^ ]*\) - \([0-9].*\)/\1---\2/;s/[^0-9a-z-]*//g;p;}' CHANGELOG.md)"
             >> $GITHUB_OUTPUT

      - uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.release.outputs.version }}
          body: |
            [API docs](https://docs.rs/derive_more/${{ steps.release.outputs.version }})
            [Changelog](${{ steps.changelog.outputs.link }})
          prerelease: ${{ contains(steps.release.outputs.version, '-') }}
